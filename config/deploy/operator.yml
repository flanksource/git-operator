apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: gitbranches.git.flanksource.com
spec:
  group: git.flanksource.com
  names:
    kind: GitBranch
    listKind: GitBranchList
    plural: gitbranches
    singular: gitbranch
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: GitBranch is the Schema for the gitbranches API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitBranchSpec defines the desired state of GitBranch
            properties:
              branchName:
                type: string
              repository:
                type: string
            required:
            - branchName
            type: object
          status:
            description: GitBranchStatus defines the observed state of GitBranch
            properties:
              head:
                description: The Git SHA1 of the main/master branch
                type: string
              lastUpdated:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: gitdeployments.git.flanksource.com
spec:
  group: git.flanksource.com
  names:
    kind: GitDeployment
    listKind: GitDeploymentList
    plural: gitdeployments
    singular: gitdeployment
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: GitDeployment is the Schema for the gitdeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitDeploymentSpec defines the desired state of GitDeployment
            properties:
              autoMerge:
                type: boolean
              description:
                type: string
              environment:
                type: string
              id:
                type: string
              name:
                type: string
              ref:
                type: string
              sha:
                type: string
            type: object
          status:
            description: GitDeploymentStatus defines the observed state of GitDeployment
            properties:
              deploymentLink:
                type: string
              environment:
                type: string
              id:
                type: string
              name:
                type: string
              ref:
                type: string
              sha:
                type: string
              statusLink:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: gitops.git.flanksource.com
spec:
  group: git.flanksource.com
  names:
    kind: GitOps
    listKind: GitOpsList
    plural: gitops
    singular: gitops
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: GitOps is the Schema for the gitops API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitOpsSpec defines the desired state of GitOps
            properties:
              args:
                additionalProperties:
                  type: string
                description: a map of args to pass to flux without -- prepended. See
                  [fluxd](https://docs.fluxcd.io/en/1.19.0/references/daemon/) for
                  a full list
                type: object
              disableScanning:
                description: 'Do not scan container image registries to fill in the
                  registry cache, implies `--git-read-only` (default: true)'
                type: boolean
              fluxVersion:
                description: 'The version to use for flux (default: 1.9.0 )'
                type: string
              gitBranch:
                description: 'The git branch to use (default: `master`)'
                type: string
              gitKey:
                description: 'The Kubernetes secret to use for cloning, if it does
                  not exist it will be generated (default: `flux-$name-git-deploy`)'
                type: string
              gitPath:
                description: 'The path with in the git repository to look for YAML
                  in (default: `.`)'
                type: string
              gitPollInterval:
                description: 'The frequency with which to fetch the git repository
                  (default: `5m0s`)'
                type: string
              gitUrl:
                description: The URL to git repository to clone
                type: string
              helmOperatorVersion:
                description: 'The version to use for flux (default: 1.9.0 )'
                type: string
              knownHosts:
                description: The contents of the known_hosts file to mount into Flux
                  and helm-operator
                type: string
              name:
                description: The name of the gitops deployment, defaults to namespace
                  name
                type: string
              namespace:
                description: The namespace to deploy the GitOps operator into, if
                  empty then it will be deployed cluster-wide into kube-system
                type: string
              sshConfig:
                description: The contents of the ~/.ssh/config file to mount into
                  Flux and helm-operator
                type: string
              syncInterval:
                description: 'The frequency with which to sync the manifests in the
                  repository to the cluster (default: `5m0s`)'
                type: string
            required:
            - gitUrl
            type: object
          status:
            description: GitOpsStatus defines the observed state of GitOps
            properties:
              lastUpdated:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: gitopsapis.git.flanksource.com
spec:
  group: git.flanksource.com
  names:
    kind: GitopsAPI
    listKind: GitopsAPIList
    plural: gitopsapis
    singular: gitopsapi
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: GitopsAPI is the Schema for the gitopsapis API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitopsAPISpec defines the desired state of GitopsAPI
            properties:
              base:
                description: The branch to use as a baseline for the new branch, defaults
                  to master
                type: string
              branch:
                description: The branch to push updates back to, defaults to master
                type: string
              gitEmail:
                type: string
              gitRepository:
                description: The repository URL, can be a HTTP or SSH address.
                pattern: ^(http|https|ssh)://
                type: string
              gitUser:
                type: string
              kustomization:
                description: The path to a kustomization file to insert or remove
                  the resource, can included templated values .e.g `specs/clusters/{{.cluster}}/kustomization.yaml`
                type: string
              path:
                description: The path to save the resource into, should including
                  templating to make it unique per cluster/namespace/kind/name tuple
                  e.g. `specs/clusters/{{.cluster}}/{{.name}}.yaml`
                type: string
              pullRequest:
                description: Open a new Pull request from the branch back to the base
                properties:
                  assignees:
                    items:
                      type: string
                    type: array
                  body:
                    type: string
                  reviewers:
                    items:
                      type: string
                    type: array
                  tags:
                    items:
                      type: string
                    type: array
                  title:
                    type: string
                type: object
              reviewers:
                description: List of github users which should approve the namespace
                  request
                items:
                  type: string
                type: array
              secretRef:
                description: The secret name containing the Git credentials. For SSH
                  repositories the secret must contain SSH_PRIVATE_KEY, SSH_PRIVATE_KEY_PASSORD
                  For Github repositories it must contain GITHUB_TOKEN
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              tokenRef:
                description: 'The secret name containing the static credential to
                  authenticate agaist either as a `Authorization: Bearer` header or
                  as a `?token=` argument Must contain a key called TOKEN'
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
            type: object
          status:
            description: GitopsAPIStatus defines the observed state of GitopsAPI
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: gitpullrequests.git.flanksource.com
spec:
  group: git.flanksource.com
  names:
    kind: GitPullRequest
    listKind: GitPullRequestList
    plural: gitpullrequests
    singular: gitpullrequest
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: GitPullRequest is the Schema for the gitpullrequests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitPullRequestSpec defines the desired state of GitPullRequest
            properties:
              assignees:
                description: Update to add or remove reviewers from the pull request
                items:
                  type: string
                type: array
              base:
                type: string
              body:
                type: string
              fork:
                type: string
              head:
                type: string
              repository:
                description: Full repository name including owner
                type: string
              reviewers:
                description: Update to add or remove reviewers from the pull request
                items:
                  type: string
                type: array
              sha:
                type: string
              title:
                type: string
            type: object
          status:
            description: GitPullRequestStatus defines the observed state of GitPullRequest
            properties:
              approvers:
                additionalProperties:
                  type: boolean
                type: object
              author:
                type: string
              id:
                type: string
              ref:
                type: string
              url:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: gitrepositories.git.flanksource.com
spec:
  group: git.flanksource.com
  names:
    kind: GitRepository
    listKind: GitRepositoryList
    plural: gitrepositories
    singular: gitrepository
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: GitRepository is the Schema for the gitrepositories API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitRepositorySpec defines the desired state of GitRepository
            properties:
              secretRef:
                description: The secret name containing the Git credentials. For SSH
                  repositories the secret must contain SSH_PRIVATE_KEY, SSH_PRIVATE_KEY_PASSORD
                  For Github repositories it must contain GITHUB_TOKEN
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              url:
                description: The repository URL, can be a HTTP or SSH address.
                pattern: ^(http|https|ssh)://
                type: string
            required:
            - url
            type: object
          status:
            description: GitRepositoryStatus defines the observed state of GitRepository
            properties:
              head:
                description: The Git SHA1 of the main/master branch
                type: string
              lastUpdated:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: git-operator-manager
  namespace: platform-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: git-operator-leader-election
  namespace: platform-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: git-operator-manager
  namespace: platform-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: git-operator-manager
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - git.flanksource.com
  resources:
  - gitbranches
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - git.flanksource.com
  resources:
  - gitbranches/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - git.flanksource.com
  resources:
  - gitdeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - git.flanksource.com
  resources:
  - gitdeployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - git.flanksource.com
  resources:
  - gitops
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - git.flanksource.com
  resources:
  - gitops/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - git.flanksource.com
  resources:
  - gitopsapis
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - git.flanksource.com
  resources:
  - gitopsapis/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - git.flanksource.com
  resources:
  - gitpullrequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - git.flanksource.com
  resources:
  - gitpullrequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - git.flanksource.com
  resources:
  - gitrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - git.flanksource.com
  resources:
  - gitrepositories/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: git-operator-leader-election
  namespace: platform-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: git-operator-leader-election
subjects:
- kind: ServiceAccount
  name: git-operator-manager
  namespace: platform-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: git-operator-manager
  namespace: platform-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: git-operator-manager
subjects:
- kind: ServiceAccount
  name: git-operator-manager
  namespace: platform-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: git-operator-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: git-operator-manager
subjects:
- kind: ServiceAccount
  name: git-operator-manager
  namespace: platform-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: git-operator
  name: git-operator-controller-manager
  namespace: platform-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: git-operator
  template:
    metadata:
      labels:
        control-plane: git-operator
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --log-level=debug
        command:
        - /manager
        image: flanksource/git-operator:v1
        imagePullPolicy: IfNotPresent
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 150Mi
          requests:
            cpu: 100m
            memory: 128Mi
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      serviceAccountName: git-operator-manager
      terminationGracePeriodSeconds: 10
